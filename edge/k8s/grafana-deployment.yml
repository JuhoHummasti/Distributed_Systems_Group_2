apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3333
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "1234"
            - name: GF_SERVER_HTTP_PORT
              value: "3333"
            - name: GF_SERVER_ROOT_URL
              value: "http://localhost/grafana"
            - name: GF_LOG_LEVEL # Add logging for troubleshooting
              value: "debug"
          volumeMounts:
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3333
      targetPort: 3333
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        uid: prometheus
        access: proxy
        url: http://prometheus:9091
        isDefault: true
        editable: true
        version: 1
        jsonData:
          timeInterval: "15s"
          httpMethod: "GET"
          prometheusType: Prometheus
          prometheusVersion: 2.x
          cacheLevel: 'High'
          manageAlerts: true
          incrementalQuerying: true
          incrementalQueryOverlapWindow: "10m"
